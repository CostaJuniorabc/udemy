Go (Golang): Explorando a Linguagem do Google

Seção 1 - Introdução
 
    1.1 -  Visão geral do curso.
        https://www.udemy.com/course/curso-go/learn/lecture/8598994#overview
    
    1.2 - Baixando a apostila.
        https://www.udemy.com/course/curso-go/learn/lecture/8603144#overview

    1.3 - Links: Apostila & Repositório
        https://www.udemy.com/course/curso-go/learn/lecture/8746548#overview

            * Apostila = http://files.cod3r.com.br/apostila-go.pdf
            * Repositório do curso no Github = https://github.com/cod3rcursos/curso-go
        
    1.4 - Go: História e Características.
        https://www.udemy.com/course/curso-go/learn/lecture/8603146#overview

    1.5 - Usando o terminal.
        https://www.udemy.com/course/curso-go/learn/lecture/26837776#overview

    1.6 - Terminais
        https://www.udemy.com/course/curso-go/learn/lecture/26826044#overview

            *Terminais

                Fala galera! Tranquilo?

                Venho passar uma dica rápida e super importante pra quem tá iniciando na área de programação agora. 
                Essa dica serve para qualquer ambiente ou curso que você vá fazer.

                O terminal do seu sistema operacional, seja ele Windows, Linux ou Mac, é super importante. 
                É uma ferramenta importante de ser dominada e que será utilizada em qualquer ambiente de qualquer linguagem ou tecnologia. 
                Vou deixar aqui links para os posts feitos lá no Blog da Cod3r sobre esse assunto.

                Caso vocês não saibam muito sobre os terminais ou se tiverem dúvidas sobre o assunto, recomendo que deem uma olhada.

                Windows -> https://blog.cod3r.com.br/terminal-no-windows/

                Linux/Mac -> https://blog.cod3r.com.br/terminal-no-macos-e-linux/

                Bons estudos, galera!

Seção 2 - Configuração do ambiente

    2.7 - Aviso importante aos usuários de Windows
        https://www.udemy.com/course/curso-go/learn/lecture/26818662#overview

            *   Aviso importante aos usuários de Windows

                    Fala galera! Tranquilo?
                    Antes de mais nada, recomendamos que vocês utilizem sempre a versão mais atualizada possível do Windows, ou seja, o Windows 10. 
                    Pois diversas tecnologias não dão mais suporte aos Windows 7, 8 ou 8.1, então caso vocês utilizem alguma dessas versões, 
                    vocês vão acabar tendo problemas em algum ponto do curso. A recomendação é utilizar o Windows 10.

                    Venho também dar uma outra dica super rápida porém super importante para todos que irão dar início às atividades do curso no 
                    ambiente Windows. O que acontece é que existem duas configurações padrão que vêm ativadas e acabam dificultando ou 
                    gerando erros na hora de programar em qualquer ambiente. Vou explicar rapidinho sobre elas e sobre como lidar com isso.

                    Na programação é super normal utilizar os caminhos absolutos de localizações na sua máquina em diversos momentos. 
                    Às vezes você mesmo utiliza, mas em geral as linguagens utilizam ali por debaixo do panos para que possam ser executadas. 
                    Esses caminhos são literalmente "c/users/seuNome/pasta" e tudo mais.

                    O primeiro problema é relacionado a Área de Trabalho, pois em alguns casos ela entra nesse caminho absoluto com seu nome em português,
                    ou seja, com espaços e acentos. E isso acaba gerando erro em diversos ambientes. A forma de se lidar com isso é bem simples, 
                    basta criar seu projeto em outra pasta que não seja a Área de Trabalho.

                    O segundo problema é relacionado ao OneDrive. Nas versões mais recentes do Windows o OneDrive é ativado por padrão 
                    e ele acaba deixando todas as pastas e arquivos criados no seu computador como arquivos em nuvem, ao invés de arquivos locais. 
                    Isso também acaba gerando erros em alguns ambientes. Para resolver isso é simples, basta desativar o OneDrive para 
                    a pasta do seu projeto ou desativar geral mesmo. Você escolhe.

                    Bons estudos galera!
            
        2.8 - Windows e Mac
            https://www.udemy.com/course/curso-go/learn/lecture/8603152#overview

        2.9 - Linux
            https://www.udemy.com/course/curso-go/learn/lecture/8603154#overview

Seção 3 - Fundamentos

        3.10 - Ambiente GO: GOROOT & GOPATH
            https://www.udemy.com/course/curso-go/learn/lecture/8603156#overview

                * comando : go env  "Esse comando mostra algumas variaveis de ambiente referente a instalação"
                * comando : go env GOROOT "Esse comando mostra o caminho do local do GOROOT"
                * comando : go env GOPATH "Esse comando mostra o caminho do local do GOPATH"

        3.11 - Atualização da execução do GO
            https://www.udemy.com/course/curso-go/learn/lecture/25286826#overview

                * Atualização da execução do GO

                Fala galera, beleza?

                Antes da versão 1.13, todos os pacotes do Go ficavam localizados numa mesma pasta (num mesmo workspace), cujo caminho fica armazenada 
                na variável de ambiente GOPATH, acessível por um shell de texto.

                A partir da versão 1.13, o Go passou a usar, como padrão, um sistema de módulos, em que um módulo reúne um conjunto de pacotes que 
                ficam localizados numa pasta determinada pelo desenvolvedor e que são gerenciados independentemente de outros módulos 
                (cada módulo é um workspace independente).

                Quando criamos um novo módulo, o Go cria um arquivo chamado "go.mod", onde ficam armazenadas as informações das dependências 
                e versões dos pacotes do módulo. A pasta na qual o arquivo "go.mod" fica localizado é chamada de raiz do módulo. 
                Todos os pacotes que fazem parte de um módulo devem ficar localizados em pastas dentro da raiz do módulo.

                Para criarmos um novo módulo, usamos o comando go mod init, seguido do nome do módulo. Podemos criar, então, um módulo chamado cod3r, 
                que será o módulo ao qual todos os pacotes usados no curso pertencerão, com o comando go mod init cod3r. Agora, todos os 
                pacotes desta pasta pertencerão ao módulo cod3r.

                Bons estudos!
        3.12 - Primeiro Programa em Go
            https://www.udemy.com/course/curso-go/learn/lecture/8603160#overview

        3.13 - Explorando os Comandos do Terminal
            https://www.udemy.com/course/curso-go/learn/lecture/8603162#overview

                *Comandos
                    go (mostra varias possibilidades de uso do go)
                    go help comandodesejado (mostra o que o comando faz qual as flags que suporta, faz um dowload de pacotes apartir do caminho de importação)
                    go version (mostra a versão do go)
                    godoc -http=:6060 (libera a documentação do go offline)
                    go env (da varias informaçoes do ambiente de instalação)
                    go doc cmd/vet (mostra a documentação desse comando "faz verificação dentro do seu codigo para detectar codigo morto") ex: go vet comandos.go
                    go build comandos.go ( comando para compilar um programa em go onde gera um arquivo para ser executado, ex: ./comandos)
                    go run comandos.go (compila e executa o programa desejado)
                    go get -u github.com/go-sql-driver/mysql (instala um pacote desejado ex : go get -u caminhoDesejado | go get -u github.com/go-sql-driver/mysql)

        3.14 - Constantes e Variáveis
            https://www.udemy.com/course/curso-go/learn/lecture/8603164#overview

        3.15 - Imprimindo Valores no Console
            https://www.udemy.com/course/curso-go/learn/lecture/8603166#overview

        3.16 - Tipos Basico
            https://www.udemy.com/course/curso-go/learn/lecture/8603168#overview

        3.17 - Tipos Básicos: Os Zeros
            https://www.udemy.com/course/curso-go/learn/lecture/8603170#overview

        3.18 - Conversão entre Tipos Básicos
            https://www.udemy.com/course/curso-go/learn/lecture/8603174#overview

        3.19 - Funções Básicas
            https://www.udemy.com/course/curso-go/learn/lecture/8603180#overview
            
        3.20 - Operadores Aritméticos
            https://www.udemy.com/course/curso-go/learn/lecture/8603184#overview

        3.21 - Operadores de Atribuição
            https://www.udemy.com/course/curso-go/learn/lecture/8603186#overview 
            
        3.22 - Operadores Relacionais
            https://www.udemy.com/course/curso-go/learn/lecture/8603188#overview
             
        3.23 - Operadores Lógicos
             https://www.udemy.com/course/curso-go/learn/lecture/8603194#overview
             
        3.24 - 24. Operadores Unários
            https://www.udemy.com/course/curso-go/learn/lecture/8603196#overview

        3.25 - Operador Ternário???
            https://www.udemy.com/course/curso-go/learn/lecture/8603198#overview

            * não tem ternario em GO

        3.26 - Ponteiros em Go
             https://www.udemy.com/course/curso-go/learn/lecture/8603200#overview

Seção 4 - Estruturas de Controle

        4.27 - If/Else
            https://www.udemy.com/course/curso-go/learn/lecture/8603230#overview

        4.28 - If/Else If
            https://www.udemy.com/course/curso-go/learn/lecture/8603232#overview

        4.29 - If com Init
            https://www.udemy.com/course/curso-go/learn/lecture/8603234#overview

        4.30 - Laço For
            https://www.udemy.com/course/curso-go/learn/lecture/8603238#overview
        
        4.31 - Switch #01
             https://www.udemy.com/course/curso-go/learn/lecture/8603242#overview

        4.32 - Switch #02
            https://www.udemy.com/course/curso-go/learn/lecture/8603244#overview

        4.33 - Resposta do Desafio Switch
            https://www.udemy.com/course/curso-go/learn/lecture/8603246#overview

        4.34 - Switch #03
            https://www.udemy.com/course/curso-go/learn/lecture/8603248#overview
        
Seção 5 - Array / Slices / Map

        5.35 - Trabalhando com Arrays
            https://www.udemy.com/course/curso-go/learn/lecture/8603252#overview

        5.36 - Percorrendo Arrays com For (Range)
            https://www.udemy.com/course/curso-go/learn/lecture/8603254#overview
        
        5.37 - Conhecendo o Slice
            https://www.udemy.com/course/curso-go/learn/lecture/8603258#overview

        5.38 - Construindo Slices com Make
            https://www.udemy.com/course/curso-go/learn/lecture/8603260#overview

        5.39 - Usando Mesmo Array Interno
            https://www.udemy.com/course/curso-go/learn/lecture/8632712#overview

        5.40 -  Slice: Usando Append e Copy
            https://www.udemy.com/course/curso-go/learn/lecture/8603264#overview

        5.41 - Trabalhando com Maps #01
            https://www.udemy.com/course/curso-go/learn/lecture/8603266#overview

        5.42 - Trabalhando com Maps #02
            https://www.udemy.com/course/curso-go/learn/lecture/8603270#overview
            
        5.43 - Maps Aninhados
            https://www.udemy.com/course/curso-go/learn/lecture/8603274#overview            

Seção 6 - Funções

        6.44 - Funções Básicas
            https://www.udemy.com/course/curso-go/learn/lecture/8679584#overview 

        6.45 - Pilha de Funções
            https://www.udemy.com/course/curso-go/learn/lecture/8682661#overview

        6.46 - Retorno Nomeado
            https://www.udemy.com/course/curso-go/learn/lecture/8682663#overview

        6.47 - Armazenar Funções em Variáveis
            https://www.udemy.com/course/curso-go/learn/lecture/8682665#overview

        6.48 -
        6.49 -
        6.50 -
        6.51 -
        6.52 -
        6.53 -
        6.54 -
        6.55 -
        6.56 -

Seção 7 -













